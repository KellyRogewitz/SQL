# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name

#Then, I answered questions like: Which artists are the 10 most popular, and how many popularity points do they have for all of their songs on the chart combined? 
SELECT Spotifydata.artist_name, SUM(Spotifydata.popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY SUM(Spotifydata.popularity) DESC
LIMIT 10;

#Which tracks are the top 10 most danceable, and what are their energy levels?
SELECT Spotifydata.track_name, Spotifydata.danceability, Spotifydata.energy
FROM BIT_DB.Spotifydata
WHERE danceability > 0.7
ORDER BY danceability DESC
LIMIT 10;

#Which track is the most popular?
SELECT Spotifydata.track_name, MAX (Spotifydata.popularity)
FROM BIT_DB.Spotifydata;
